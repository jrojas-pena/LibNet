package com.libnet;

import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.servlet.DispatcherType;
import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.annotation.WebFilter;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import ca.senecacollege.prg556.limara.bean.Material;
import ca.senecacollege.prg556.limara.dao.MaterialDAO;

import com.libnet.data.AccountOwnerDAOFactory;
import com.libnet.data.BadRequestException;
import com.libnet.data.MaterialDAOFactory;
import com.sun.xml.wss.impl.misc.HANonceManager.nonceCleanupTask;

import java.util.ArrayList;
/**
 * Servlet Filter implementation class ShowMaterialReservationsFilter
 */
//@WebFilter(dispatcherTypes = {
//				DispatcherType.REQUEST, 
//				DispatcherType.FORWARD
//		}
//					, urlPatterns = { "/showmaterialreservations.jspx" })
public class ShowMaterialReservationsFilter implements Filter {

    /**
     * Default constructor. 
     */
    public ShowMaterialReservationsFilter() {
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see Filter#destroy()
	 */
	public void destroy() {
		// TODO Auto-generated method stub
	}

	/**
	 * @see Filter#doFilter(ServletRequest, ServletResponse, FilterChain)
	 */
	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
		// TODO Auto-generated method stub
		// place your code here
		HttpServletRequest req = (HttpServletRequest)request;
		MaterialDAO materials = MaterialDAOFactory.getMaterialDAO();
		
		
		
	
		try {
			List<Material> materialList = materials.getAvailableMaterials(null, null);
		
				
				
				if ("POST".equals(req.getMethod()) && req.getParameter("cancelBtn") != null){
					String id = req.getParameter("custId");
					Material cancelItem = materials.getMaterial(id);
					
					
					if(cancelItem == null) {
						throw new BadRequestException();
					}
					else {
						
						//cancel Item
						for(int i = 0; i < materialList.size(); i++){
							if((cancelItem.getId()).equals(materialList.get(i).getId())){
								
								materialList.remove(i);
								break;
							}
						
						
						
						}
						
				
					}
				}
			
				req.setAttribute("list", materialList);	
				
		
			
			
			
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
			
		chain.doFilter(request, response);
				
			
			// pass the request along the filter chain
			
		
		
		
		
	}

	/**
	 * @see Filter#init(FilterConfig)
	 */
	public void init(FilterConfig fConfig) throws ServletException {
		// TODO Auto-generated method stub
	}

}
